apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-order
  labels:
    app: postgres-order
    group: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-order
  template:
    metadata:
      labels:
        app: postgres-order
        type: db
    spec:
      volumes:  # indicates which PVC are available for this Deployment
        - name: postgres-storage-order
          persistentVolumeClaim:
            claimName: postgres-persistent-volume-claim-order
      containers:
        - name: postgres-order
          image: postgres:9.6-alpine
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config-order
          volumeMounts:    # indicates which Volume (from spec.template.spec.volumes) should be used
            - name: postgres-storage-order                # name of the Volume
              mountPath: /var/lib/postgresql/data   # path inside the container
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-payment
  labels:
    app: postgres-payment
    group: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-payment
  template:
    metadata:
      labels:
        app: postgres-payment
        type: db
    spec:
      volumes:  # indicates which PVC are available for this Deployment
        - name: postgres-storage-payment
          persistentVolumeClaim:
            claimName: postgres-persistent-volume-claim-payment
      containers:
        - name: postgres-payment
          image: postgres:9.6-alpine
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config-payment
          volumeMounts:    # indicates which Volume (from spec.template.spec.volumes) should be used
            - name: postgres-storage-payment                # name of the Volume
              mountPath: /var/lib/postgresql/data   # path inside the container              